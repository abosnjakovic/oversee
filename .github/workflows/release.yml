---
name: Release

on:
  push:
    tags:
      - "v*"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ steps.get_version.outputs.version }}"
          gh release create ${{ github.ref_name }} \
            --repo ${{ github.repository }} \
            --title "Release ${{ github.ref_name }}" \
            --notes "Release ${version}

          ## Changes
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          for details.

          ## Installation

          ### macOS (Apple Silicon)
          \`\`\`bash
          version=\"${version}\"
          repo=\"${{ github.repository }}\"
          ref=\"${{ github.ref_name }}\"
          curl -L \"https://github.com/\${repo}/releases/download/\${ref}/oversee-\${version}-aarch64-apple-darwin.tar.gz\" | tar xz
          \`\`\`

          ### macOS (Intel)
          \`\`\`bash
          version=\"${version}\"
          repo=\"${{ github.repository }}\"
          ref=\"${{ github.ref_name }}\"
          curl -L \"https://github.com/\${repo}/releases/download/\${ref}/oversee-\${version}-x86_64-apple-darwin.tar.gz\" | tar xz
          \`\`\`" \
            --draft=false \
            --prerelease=false

          # Get upload URL for use by build jobs
          upload_url=$(gh api repos/${{ github.repository }}/releases/tags/${{ github.ref_name }} --jq '.upload_url')
          echo "upload_url=${upload_url}" >> $GITHUB_OUTPUT

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            target: aarch64-apple-darwin
            suffix: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
            suffix: x86_64-apple-darwin

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          version="${{ needs.create-release.outputs.version }}"
          suffix="${{ matrix.suffix }}"
          archive_name="oversee-${version}-${suffix}.tar.gz"
          tar czf "$archive_name" oversee
          ls -la "$archive_name"

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          version="${{ needs.create-release.outputs.version }}"
          suffix="${{ matrix.suffix }}"
          target="${{ matrix.target }}"
          archive_name="oversee-${version}-${suffix}.tar.gz"
          gh release upload ${{ github.ref_name }} \
            --repo ${{ github.repository }} \
            "target/${target}/release/${archive_name}"

  publish-crates:
    name: Publish to crates.io
    needs: [create-release, build-release]
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
